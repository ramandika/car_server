<!------ Include the above in your HEAD tag ---------->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBq5_3DdJ1T12nlbpuvSQ398MXbNonNb3g&libraries=drawing" async defer></script>
<script>
    var all_overlays = [];
    var selectedShape;

    function deleteAllShape() {
        for (var i = 0; i < all_overlays.length; i++) {
            all_overlays[i].overlay.setMap(null);
        }
        all_overlays = [];
    }

    window.onload = function() {
        alert("Hellow")
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {

                map = new google.maps.Map(document.getElementById('map'), {
                    center: {
                        lat: -6.2228944,
                        lng: 106.7885598
                    },
                    zoom: 18
                });
                // google.maps.event.addListener(map, 'click', function(event) {
                //     placeMarker(event.latLng);
                //     console.log(event.latLng.toUrlValue(5));
                // });

                function placeMarker(location) {
                    var marker = new google.maps.Marker({
                        position: location,
                        map: map
                    });

                }
                var drawingManager = new google.maps.drawing.DrawingManager({
                    drawingMode: google.maps.drawing.OverlayType.MARKER,
                    drawingControl: true,
                    drawingControlOptions: {
                        position: google.maps.ControlPosition.TOP_CENTER,
                        drawingModes: [
                            //google.maps.drawing.OverlayType.MARKER,
                            google.maps.drawing.OverlayType.CIRCLE,
                            google.maps.drawing.OverlayType.POLYGON,
                            google.maps.drawing.OverlayType.RECTANGLE
                        ]
                    },
                    markerOptions: {
                        icon: 'images/beachflag.png'
                    },
                    circleOptions: {
                        fillColor: '#ffff00',
                        fillOpacity: 0.2,
                        strokeWeight: 3,
                        clickable: false,
                        editable: true,
                        zIndex: 1
                    },
                    polygonOptions: {
                        clickable: true,
                        draggable: true,
                        editable: true,
                        fillColor: '#ffff00',
                        fillOpacity: 1,

                    },
                    rectangleOptions: {
                        clickable: true,
                        draggable: true,
                        editable: true,
                        fillColor: '#ffff00',
                        fillOpacity: 0.5,
                    }
                });

                function clearSelection() {
                    if (selectedShape) {
                        selectedShape.setEditable(false);
                        selectedShape = null;
                    }
                }

                function setSelection(shape) {
                    clearSelection(); //last shape unselected
                    selectedShape = shape;
                    shape.setEditable(true);
                    // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));
                    // google.maps.event.addListener(selectedShape.getPath(), 'set_at', getPolygonCoords(shape));
                }

                function deleteSelectedShape() {
                    if (selectedShape) {
                        selectedShape.setMap(null);
                    }
                }

                function deleteAllShape() {
                    for (var i = 0; i < all_overlays.length; i++) {
                        all_overlays[i].overlay.setMap(null);
                    }
                    all_overlays = [];
                }

                function CenterControl(controlDiv, map) {

                    // Set CSS for the control border.
                    var controlUI = document.createElement('div');
                    controlUI.style.backgroundColor = '#fff';
                    controlUI.style.border = '2px solid #fff';
                    controlUI.style.borderRadius = '3px';
                    controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
                    controlUI.style.cursor = 'pointer';
                    controlUI.style.marginBottom = '22px';
                    controlUI.style.textAlign = 'center';
                    controlUI.title = 'Select to delete the shape';
                    controlDiv.appendChild(controlUI);

                    // Set CSS for the control interior.
                    var controlText = document.createElement('div');
                    controlText.style.color = 'rgb(25,25,25)';
                    controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
                    controlText.style.fontSize = '16px';
                    controlText.style.lineHeight = '38px';
                    controlText.style.paddingLeft = '5px';
                    controlText.style.paddingRight = '5px';
                    controlText.innerHTML = 'Delete Selected Area';
                    controlUI.appendChild(controlText);

                    // Setup the click event listeners: simply set the map to Chicago.
                    controlUI.addEventListener('click', function() {
                        deleteSelectedShape();
                    });

                }
                drawingManager.setMap(map);
                var getPolygonCoords = function(newShape) {
                    console.log("We are one");
                    var len = newShape.getPath().getLength();
                    for (var i = 0; i < len; i++) {
                        console.log(newShape.getPath().getAt(i).toUrlValue(6));
                    }
                };

                google.maps.event.addListener(drawingManager, 'polygoncomplete', function(event) {

                    event.getPath().getLength();
                    google.maps.event.addListener(event.getPath(), 'insert_at', function() {
                        var len = event.getPath().getLength();
                        for (var i = 0; i < len; i++) {
                            console.log(event.getPath().getAt(i).toUrlValue(5));
                        }
                    });
                    google.maps.event.addListener(event.getPath(), 'set_at', function() {
                        var len = event.getPath().getLength();
                        for (var i = 0; i < len; i++) {
                            console.log(event.getPath().getAt(i).toUrlValue(5));
                        }
                    });
                });

                google.maps.event.addListener(drawingManager, 'overlaycomplete', function(event) {
                    all_overlays.push(event);
                    if (event.type !== google.maps.drawing.OverlayType.MARKER) {
                        $('#exampleModal').modal('show');
                        drawingManager.setDrawingMode(null);
                        //Write code to select the newly selected object.

                        var newShape = event.overlay;
                        newShape.type = event.type;
                        google.maps.event.addListener(newShape, 'click', function() {
                            setSelection(newShape);
                        });

                        setSelection(newShape);
                    }
                });


                var centerControlDiv = document.createElement('div');
                var centerControl = new CenterControl(centerControlDiv, map);

                centerControlDiv.index = 1;
                map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);
            });
        }
    };
</script>

<div class="row" style="height: 100vh">
  <div class="col-sm-4">
    <%= react_component("areas_list") %>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Add Area</h5>
          <button onclick="deleteAllShape()" type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form>
            <div class="form-group row">
              <label for="inputEmail3" class="col-sm-2 col-form-label">Name</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="inputEmail3" placeholder="area name">
              </div>
            </div>
            <div class="form-group row">
              <label for="inputPassword3" class="col-sm-2 col-form-label">Price</label>
              <div class="col-sm-10">
                <input type="number" class="form-control" id="inputPassword3" placeholder="price">
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary">Save Area</button>
        </div>
      </div>
    </div>
  </div>

  <div class="col-sm-8" id="map" style="height: 100vh"/>
</div>
